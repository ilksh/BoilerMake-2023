import { CreateLocalMediaOptions } from './participant/options';
import { LocalTrack } from './track/LocalTrack';
/**
 * getUserMedia is a wrapper around the native
 * [`navigator.MediaDevices.getUserMedia`](https://developer.mozilla.org/docs/Web/API/MediaDevices/getUserMedia)
 * function. We do this in order to constrain video quality
 * to a reasonable default and return {@link LocalTrack} instances.
 *
 * @param options
 */
export declare function getUserMedia(options?: CreateLocalMediaOptions): Promise<LocalTrack[]>;
/**
 * getDisplayMedia is a wrapper around the native
 * [`navigator.MediaDevices.getDisplayMedia`](https://developer.mozilla.org/docs/Web/API/MediaDevices/getDisplayMedia)
 * function. We do this in order to constrain video quality
 * to a reasonable default and return {@link LocalTrack} instances.
 *
 * @param options
 */
export declare function getDisplayMedia(options?: CreateLocalMediaOptions): Promise<LocalTrack[]>;
/**
 * getLocalTracksFromMediaStream allows developers to create local tracks from any
 * [`MediaStream`](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream) interface such as `<canvas>`
 * or `<video>` elements.
 *
 * @param streamName human readable name to be used for each [[LocalTrack.name]]
 * @param stream
 */
export declare function getLocalTracksFromMediaStream(streamName: string, stream: MediaStream): Promise<LocalTrack[]>;
