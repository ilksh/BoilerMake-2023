import { ISocketService, ISocketTrace } from "./interfaces";
interface IWatchRTCSocketOptions {
    debug?: boolean;
}
export default class WatchRTCSocket implements ISocketService {
    static _instance: WatchRTCSocket;
    connection: WebSocket | null;
    wasConnected: boolean;
    buffer: any[];
    private sendInterval;
    private onClose;
    private debug;
    private dataCollection;
    private sendPromises;
    constructor(options: IWatchRTCSocketOptions);
    connect(url: string, onData: (data: any) => void, onError: (error: any, errorType?: string) => void, onOpen?: () => void, onClose?: (e: CloseEvent) => void): void;
    trace: ISocketTrace;
    close(): void;
    disableDataCollection(): void;
    enableDataCollection(): void;
    toggleDebug(debug: boolean): void;
}
export {};
