{"ast":null,"code":"var _jsxFileName = \"/Users/jennychen/Desktop/project.nosync/boilerMake/sudoku/src/components/Result.js\";\nimport React, { Component } from 'react';\nimport background from \"./sudoku.jpg\";\nimport particlesConfig from \"../config/particles-config\";\nimport ParticlesBackground from \"./ParticlesBackground\";\nimport { useCallback } from \"react\";\nimport Particles from \"react-particles\";\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Result extends Component {\n  constructor(props) {\n    super(props);\n\n    // fetch('../../sudoku_solve/answer.txt')\n    // .then((r) => r.text())\n    // .then(text  => {\n    // console.log(text);\n    // });\n\n    const fs = require('fs');\n    const readline = require('readline');\n    var file_name = '../../sudoku_solve/answer.txt';\n    var r = readline.createInterface({\n      input: fs.createReadStream(file_name)\n    });\n    var lst = [];\n    r.on('line', function (text) {\n      let s = \"\";\n      for (var i = 0; i < 9; ++i) {\n        s = s + text.charAt(i);\n        s = s + \" \";\n      }\n      console.log(s);\n      lst.push(s);\n    });\n    for (var i = 0; i < 10; ++i) {\n      console.log(lst[i]);\n    }\n  }\n\n  // function f(lst) {\n  //     const lineReader = require('line-reader');\n  //     lineReader.eachLine('Input.txt',(line,last)=>{\n  //     console.log(line);\n  //     lst.push(line);\n  //     console.log(\"push works\");\n  //     })\n  //     return lst;\n  // }\n\n  // var arr = new Array();\n  // var new_arr = f(arr);\n  // for (var elem of new_arr) {\n  //     console.log(elem);\n  // }\n\n  // var fs = require(\"fs\");\n  // var text = fs.readFileSync(\"./Input.txt\");\n  // var textByLine = text.split(\"\\n\")\n  // for (var elem of textByLine) {\n  //     console.log(elem);\n  // }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBackground, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            href: \"/Upload\",\n            sx: {\n              mt: 50,\n              mb: 2\n            },\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Result;","map":{"version":3,"names":["React","Component","background","particlesConfig","ParticlesBackground","useCallback","Particles","Button","Box","Container","Result","constructor","props","fs","require","readline","file_name","r","createInterface","input","createReadStream","lst","on","text","s","i","charAt","console","log","push","render","mt","mb"],"sources":["/Users/jennychen/Desktop/project.nosync/boilerMake/sudoku/src/components/Result.js"],"sourcesContent":["import React, { Component } from 'react';\nimport background from \"./sudoku.jpg\"\nimport particlesConfig from \"../config/particles-config\"\nimport ParticlesBackground from \"./ParticlesBackground\"\nimport { useCallback } from \"react\";\nimport Particles from \"react-particles\";\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\n\nclass Result extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        // fetch('../../sudoku_solve/answer.txt')\n        // .then((r) => r.text())\n        // .then(text  => {\n        // console.log(text);\n        // });\n\n        const fs = require('fs');\n        const readline = require('readline');\n        var file_name = '../../sudoku_solve/answer.txt';\n        \n        var r = readline.createInterface({\n            input : fs.createReadStream(file_name)\n        });\n\n        var lst = []\n\n        r.on('line', function(text) {\n            let s = \"\"\n            for(var i = 0; i < 9; ++i) {\n                s = s + text.charAt(i);\n                s = s + \" \";\n            }\n            console.log(s);\n            lst.push(s)\n        } ) \n        for(var i = 0; i < 10; ++i) {\n            console.log(lst[i]);\n        }\n    }\n\n\n\n\n    // function f(lst) {\n    //     const lineReader = require('line-reader');\n    //     lineReader.eachLine('Input.txt',(line,last)=>{\n    //     console.log(line);\n    //     lst.push(line);\n    //     console.log(\"push works\");\n    //     })\n    //     return lst;\n    // }\n\n    // var arr = new Array();\n    // var new_arr = f(arr);\n    // for (var elem of new_arr) {\n    //     console.log(elem);\n    // }\n\n\n\n    // var fs = require(\"fs\");\n    // var text = fs.readFileSync(\"./Input.txt\");\n    // var textByLine = text.split(\"\\n\")\n    // for (var elem of textByLine) {\n    //     console.log(elem);\n    // }\n\n    render() {\n        return (\n            <div className = \"home\">\n                <ParticlesBackground />\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <Box>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        href=\"/Upload\"\n                        sx={{ mt: 50, mb: 2 }}\n                    >\n                        Go Back\n                    </Button>\n                    </Box>\n                </Container>\n            </div>\n            );\n    }\n}\n\nexport default Result"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,eAAe,MAAM,4BAA4B;AACxD,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,SAASC,WAAW,QAAQ,OAAO;AACnC,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,MAAMC,MAAM,SAAST,SAAS,CAAC;EAE3BU,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;;IAEZ;IACA;IACA;IACA;IACA;;IAEA,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;IACxB,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;IACpC,IAAIE,SAAS,GAAG,+BAA+B;IAE/C,IAAIC,CAAC,GAAGF,QAAQ,CAACG,eAAe,CAAC;MAC7BC,KAAK,EAAGN,EAAE,CAACO,gBAAgB,CAACJ,SAAS;IACzC,CAAC,CAAC;IAEF,IAAIK,GAAG,GAAG,EAAE;IAEZJ,CAAC,CAACK,EAAE,CAAC,MAAM,EAAE,UAASC,IAAI,EAAE;MACxB,IAAIC,CAAC,GAAG,EAAE;MACV,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAE,EAAEA,CAAC,EAAE;QACvBD,CAAC,GAAGA,CAAC,GAAGD,IAAI,CAACG,MAAM,CAACD,CAAC,CAAC;QACtBD,CAAC,GAAGA,CAAC,GAAG,GAAG;MACf;MACAG,OAAO,CAACC,GAAG,CAACJ,CAAC,CAAC;MACdH,GAAG,CAACQ,IAAI,CAACL,CAAC,CAAC;IACf,CAAC,CAAE;IACH,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAE,EAAEA,CAAC,EAAE;MACxBE,OAAO,CAACC,GAAG,CAACP,GAAG,CAACI,CAAC,CAAC,CAAC;IACvB;EACJ;;EAKA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAIA;EACA;EACA;EACA;EACA;EACA;;EAEAK,MAAM,GAAG;IACL,oBACI;MAAK,SAAS,EAAG,MAAM;MAAA,wBACnB,QAAC,mBAAmB;QAAA;QAAA;QAAA;MAAA,QAAG,eACvB,QAAC,SAAS;QAAC,SAAS,EAAC,MAAM;QAAC,QAAQ,EAAC,IAAI;QAAA,uBACrC,QAAC,GAAG;UAAA,uBACJ,QAAC,MAAM;YACH,IAAI,EAAC,QAAQ;YACb,SAAS;YACT,OAAO,EAAC,WAAW;YACnB,IAAI,EAAC,SAAS;YACd,EAAE,EAAE;cAAEC,EAAE,EAAE,EAAE;cAAEC,EAAE,EAAE;YAAE,CAAE;YAAA,UACzB;UAED;YAAA;YAAA;YAAA;UAAA;QAAS;UAAA;UAAA;UAAA;QAAA;MACH;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA,QACV;EAEd;AACJ;AAEA,eAAetB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}