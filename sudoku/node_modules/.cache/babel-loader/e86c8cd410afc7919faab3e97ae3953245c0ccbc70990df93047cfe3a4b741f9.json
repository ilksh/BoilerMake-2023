{"ast":null,"code":"var _jsxFileName = \"/Users/jennychen/Desktop/project.nosync/boilerMake/sudoku/src/components/Result.js\";\nimport React, { Component } from 'react';\nimport background from \"./sudoku.jpg\";\nimport particlesConfig from \"../config/particles-config\";\nimport ParticlesBackground from \"./ParticlesBackground\";\nimport { useCallback } from \"react\";\nimport Particles from \"react-particles\";\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Result() {\n  let fetchData = async () => {\n    let inf = await fetch(\"http://localhost:3000/answer.txt\");\n    let final = await inf.text();\n    console.log(final);\n    const linesArray = final.split(\"\\n\");\n    const listItems = linesArray.map(line => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  };\n  fetchData();\n\n  // constructor(props) {\n  //     super(props);\n\n  // fetch('../../sudoku_solve/answer.txt')\n  // .then((r) => r.text())\n  // .then(text  => {\n  // console.log(text);\n  // });\n\n  // var fs = require('fs');\n  // const readline = require('readline');\n  // var file_name = '../../sudoku_solve/answer.txt';\n\n  // var r = readline.createInterface({\n  //     input : fs.createReadStream(file_name)\n  // });\n\n  // var lst = []\n\n  // r.on('line', function(text) {\n  //     let s = \"\"\n  //     for(var i = 0; i < 9; ++i) {\n  //         s = s + text.charAt(i);\n  //         s = s + \" \";\n  //     }\n  //     console.log(s);\n  //     lst.push(s)\n  // } ) \n  // for(var i = 0; i < 10; ++i) {\n  //     console.log(lst[i]);\n  // }\n  // }\n\n  // function f(lst) {\n  //     const lineReader = require('line-reader');\n  //     lineReader.eachLine('Input.txt',(line,last)=>{\n  //     console.log(line);\n  //     lst.push(line);\n  //     console.log(\"push works\");\n  //     })\n  //     return lst;\n  // }\n\n  // var arr = new Array();\n  // var new_arr = f(arr);\n  // for (var elem of new_arr) {\n  //     console.log(elem);\n  // }\n\n  // var fs = require(\"fs\");\n  // var text = fs.readFileSync(\"./Input.txt\");\n  // var textByLine = text.split(\"\\n\")\n  // for (var elem of textByLine) {\n  //     console.log(elem);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(ParticlesBackground, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          href: \"/Upload\",\n          sx: {\n            mt: 50,\n            mb: 2\n          },\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n_c = Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","Component","background","particlesConfig","ParticlesBackground","useCallback","Particles","Button","Box","Container","Result","fetchData","inf","fetch","final","text","console","log","linesArray","split","listItems","map","line","mt","mb"],"sources":["/Users/jennychen/Desktop/project.nosync/boilerMake/sudoku/src/components/Result.js"],"sourcesContent":["import React, { Component } from 'react';\nimport background from \"./sudoku.jpg\"\nimport particlesConfig from \"../config/particles-config\"\nimport ParticlesBackground from \"./ParticlesBackground\"\nimport { useCallback } from \"react\";\nimport Particles from \"react-particles\";\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\n\nexport default function Result() {\n    let fetchData = async() => {\n        let inf = await fetch(\"http://localhost:3000/answer.txt\");\n        let final = await inf.text();\n        console.log(final);\n\n        const linesArray = final.split(\"\\n\");\n\n        const listItems = linesArray.map((line) =>\n            <li>{line}</li>\n        );\n\n        return <ul>{listItems}</ul>;\n    }\n\n    fetchData();\n\n    // constructor(props) {\n    //     super(props);\n\n        \n        \n        // fetch('../../sudoku_solve/answer.txt')\n        // .then((r) => r.text())\n        // .then(text  => {\n        // console.log(text);\n        // });\n\n        // var fs = require('fs');\n        // const readline = require('readline');\n        // var file_name = '../../sudoku_solve/answer.txt';\n        \n        // var r = readline.createInterface({\n        //     input : fs.createReadStream(file_name)\n        // });\n\n        // var lst = []\n\n        // r.on('line', function(text) {\n        //     let s = \"\"\n        //     for(var i = 0; i < 9; ++i) {\n        //         s = s + text.charAt(i);\n        //         s = s + \" \";\n        //     }\n        //     console.log(s);\n        //     lst.push(s)\n        // } ) \n        // for(var i = 0; i < 10; ++i) {\n        //     console.log(lst[i]);\n        // }\n    // }\n\n\n\n\n    // function f(lst) {\n    //     const lineReader = require('line-reader');\n    //     lineReader.eachLine('Input.txt',(line,last)=>{\n    //     console.log(line);\n    //     lst.push(line);\n    //     console.log(\"push works\");\n    //     })\n    //     return lst;\n    // }\n\n    // var arr = new Array();\n    // var new_arr = f(arr);\n    // for (var elem of new_arr) {\n    //     console.log(elem);\n    // }\n\n\n\n    // var fs = require(\"fs\");\n    // var text = fs.readFileSync(\"./Input.txt\");\n    // var textByLine = text.split(\"\\n\")\n    // for (var elem of textByLine) {\n    //     console.log(elem);\n    // }\n\n    return (\n        <div className = \"home\">\n            <ParticlesBackground />\n            <Container component=\"main\" maxWidth=\"xs\">\n                <Box>\n                    {/* {this.fetchData()} */}\n                </Box>\n                <Box>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    href=\"/Upload\"\n                    sx={{ mt: 50, mb: 2 }}\n                >\n                    Go Back\n                </Button>\n                </Box>\n            </Container>\n        </div>\n        );\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,eAAe,MAAM,4BAA4B;AACxD,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,SAASC,WAAW,QAAQ,OAAO;AACnC,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,eAAe,SAASC,MAAM,GAAG;EAC7B,IAAIC,SAAS,GAAG,YAAW;IACvB,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;IACzD,IAAIC,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;IAC5BC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;IAElB,MAAMI,UAAU,GAAGJ,KAAK,CAACK,KAAK,CAAC,IAAI,CAAC;IAEpC,MAAMC,SAAS,GAAGF,UAAU,CAACG,GAAG,CAAEC,IAAI,iBAClC;MAAA,UAAKA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,CAClB;IAED,oBAAO;MAAA,UAAKF;IAAS;MAAA;MAAA;MAAA;IAAA,QAAM;EAC/B,CAAC;EAEDT,SAAS,EAAE;;EAEX;EACA;;EAII;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACJ;;EAKA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAIA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACI;IAAK,SAAS,EAAG,MAAM;IAAA,wBACnB,QAAC,mBAAmB;MAAA;MAAA;MAAA;IAAA,QAAG,eACvB,QAAC,SAAS;MAAC,SAAS,EAAC,MAAM;MAAC,QAAQ,EAAC,IAAI;MAAA,wBACrC,QAAC,GAAG;QAAA;QAAA;QAAA;MAAA,QAEE,eACN,QAAC,GAAG;QAAA,uBACJ,QAAC,MAAM;UACH,IAAI,EAAC,QAAQ;UACb,SAAS;UACT,OAAO,EAAC,WAAW;UACnB,IAAI,EAAC,SAAS;UACd,EAAE,EAAE;YAAEY,EAAE,EAAE,EAAE;YAAEC,EAAE,EAAE;UAAE,CAAE;UAAA,UACzB;QAED;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACH;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACV;AAEd;AAAC,KArGuBd,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}